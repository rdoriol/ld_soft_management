1731524468
waR3U4bTeM%3A9376968dca03342406954590272ac03e-a4c13b7dbc853baeeca245e956b6a9f8
s:13472:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"a4c13b7dbc853baeeca245e956b6a9f8";s:39:" phpDocumentor\Reflection\Php\File name";s:23:"10-users.controller.php";s:39:" phpDocumentor\Reflection\Php\File path";s:35:"controllers/10-users.controller.php";s:41:" phpDocumentor\Reflection\Php\File source";s:4555:"<?php
   // require_once "04-inventory_validations.controller.php";

    /**
     * Clase que implementará métodos para realizar CRUD recibiendo datos de la Vista (users y login) y enviándolos al Modelo.
     */
    class UserController { 

        /**
         * Método que realizará el login de un usuario, comprobará las credenciales introducidas y actuará según el resultado.
         */
         public function ctrToLogin() {
            $userValidation = "";
            try {
                if(isset($_POST["submitLogin"])) {
                    if(!empty($_POST["user_login"]) && !empty($_POST["pass"])) {
                            
                            // Se genera array asociativo con los datos obtenidos del formulario login
                        $data = array( "user"=> $_POST["user_login"],
                                       "pwd"=> crypt($_POST["pass"],'$2a$09$passwordLockeduseralt$'));      // crypt con salt Blowfish 
                                       
                            
                            // Se lanza método del modelo para comprobar datos recibidos con los existentes en la base de datos
                        $userValidation = UserModel::mdlToLogin($data);
                            
                            // En función del resultado recibido de $userValidation se avisará a usuario de errores o se dará visto bueno
                        if($userValidation == "userKo") {
                            echo "<div class='text-center alert-danger rounded login_empty_fields'><p>El <b>Usuario</b> introducido no existe en la base de datos.</p></div>";
                        }
                        else {  
                            $userData = UserModel::mdlToListUsers("users", "name_user" , $data["user"]); // Se almacenan datos del usuario 

                            if($userValidation == "pwdKo") {

                                    // Si la contraseña es erronea, se comprueba número de intentos erroneos del usuario (máximo 4 intentos fallidos)
                                
                                if($userData[0]->failed_attemps >= 3) {
                                    $passLocked = new UserModel();
                                    $passLocked->mdlUpdateFailedAttemps($userData[0]->token_user);
                                    echo "<div class='text-center alert-danger rounded login_empty_fields'><p>La <b>Contraseña</b> introducida no es correcta.</p><p>Número máximo de intentos superados. <b>Usuario bloqueado</b></p></div>";
                                }
                                else {
                                    $newAttempsNumber = $userData[0]->failed_attemps + 1;
                                    $attempNumber = new UserModel();
                                    $attempNumber->mdlUpdateFailedAttemps($userData[0]->token_user, $newAttempsNumber);
                                
                                    $remainingAttempts = 4 - $newAttempsNumber; // Intentos restantes
                                    echo "<div class='text-center alert-danger rounded login_empty_fields'><p>La <b>Contraseña</b> introducida no es correcta.</p><p>Dispone de $remainingAttempts intentos.</p></div>";
                                }
                            }
                            else {                                         
                                $attempNumber = new UserModel();
                                $attempNumber->mdlUpdateFailedAttemps($userData[0]->token_user, 0);
                                $userValidation = "ok";

                                $_SESSION["loginCheck"] = "ok";
                                $_SESSION["user_name"] = $userData[0]->name_user;
                                header("location: index.php?pages=06-home");                                       
                                exit;                              
                            } 
                        }
                    }
                    else {
                        echo "<div class='text-center alert-danger rounded login_empty_fields'><p>Los campos <b>Usuario</b> y <b>Contraseña</b> no pueden estar vacíos</p></div>";
                    }
                }
                return $userValidation;
            }
            catch(PDOException $ex) {
                echo "Error interno ctrToLogin()" . $ex->getMessage();
            }
        }
    }

";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:15:"\UserController";O:35:"phpDocumentor\Reflection\Php\Class_":13:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:15:"\UserController";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"UserController";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:122:"Clase que implementará métodos para realizar CRUD recibiendo datos de la Vista (users y login) y enviándolos al Modelo.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";N;s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:1:{s:29:"\UserController::ctrToLogin()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:120:"Método que realizará el login de un usuario, comprobará las credenciales introducidas y actuará según el resultado.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:29:"\UserController::ctrToLogin()";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"ctrToLogin";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:12;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:72;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:7;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Class_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:73;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";